{"version":3,"file":"/assets/admin/js/wp-adminify--folder.min.js","mappings":"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","sources":["webpack://adminify/./dev/admin/modules/folder/folder.js","webpack://adminify/dev/admin/modules/folder/components/folders.vue","webpack://adminify/./dev/admin/modules/folder/components/folders.vue?fd67","webpack://adminify/./dev/admin/modules/folder/components/folders.vue?5f1b","webpack://adminify/./dev/admin/modules/folder/components/folders.vue","webpack://adminify/./dev/admin/modules/folder/folder-app.vue","webpack://adminify/dev/admin/modules/folder/folder-app.vue","webpack://adminify/./dev/admin/modules/folder/folder-app.vue?223c","webpack://adminify/./dev/admin/modules/folder/folder-app.vue?0334"],"sourcesContent":["import Vue from 'vue';\n\nVue.component( 'folder-app', require('./folder-app.vue').default );\nVue.component( 'folders', require('./components/folders.vue').default );\n\njQuery( function( $ ) {\n\n\tif ( $('#wp-adminify--folder-app').length ) {\n\n        new Vue({\n            el: '#wp-adminify--folder-app',\n            template: '<folder-app></folder-app>'\n        });\n        \n    }\n\n});","<template>\n    \n    <ul>\n\n        <li class=\"folder--single-root has--sub-menu\" :class=\"is_folder(_folder) && 'active'\" v-for=\"_folder in folders\" :key=\"_folder.term_id\" :data-folder=\"_folder.term_id\">\n\n            <a :href=\"get_folder_url(_folder)\" @contextmenu=\"folderActions( $event, _folder )\" :style=\"{'color': _folder.color}\">\n                <span class=\"wp-adminify--folder-left\">\n                    <span class=\"wp-adminify--icon-control\">\n                        <span class=\"wp-adminify--icon dashicons dashicons-open-folder\" v-if=\"!folder_select_toggle\"></span>\n                        <input class=\"wp-adminify--control\" type=\"checkbox\" v-if=\"folder_select_toggle\" v-model=\"_folder.selected\" @click.stop.capture=\"\">\n                    </span>\n                    <span class=\"wp-adminify--name\">{{ _folder.name }}</span>\n                </span>\n                <span class=\"wp-adminify--count\">{{ _folder.count }}</span>\n            </a>\n\n            <folders :folders=\"_folder.children\" :folder_select_toggle=\"folder_select_toggle\" class=\"folder--sub-lists\" v-if=\"_folder.children.length\"></folders>\n\n            <ul class=\"adminify--sub-menu\">\n                <li><a href=\"#\" @click.prevent.stop=\"showNewSubFolderPopup( _folder )\">New Sub-folder</a></li>\n                <li><a href=\"#\" @click.prevent.stop=\"showRenameFolderPopup( _folder )\">Rename</a></li>\n                <li><a href=\"#\" @click.prevent.stop=\"showDeleteFolderPopup( _folder )\">Delete</a></li>\n            </ul>\n\n        </li>\n    </ul>\n\n</template>\n\n<script>\n\nexport default {\n\n    props: {\n\n\t\tfolders: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t},\n\n\t\tfolder_select_toggle: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true\n\t\t},\n\n\t},\n\n    methods: {\n\n        is_folder(_folder) {\n            return this.$parent.is_folder(_folder)\n        },\n\n        get_folder_url(_folder) {\n            return this.$parent.get_folder_url(_folder)\n        },\n\n        folderActions( $event, _folder ) {\n            this.$parent.folderActions( $event, _folder )\n        },\n\n        showRenameFolderPopup( _folder ) {\n            this.$parent.showRenameFolderPopup( _folder )\n        },\n\n        showDeleteFolderPopup( _folder ) {\n            this.$parent.showDeleteFolderPopup( _folder )\n        },\n\n        showNewSubFolderPopup( _folder ) {\n            this.$parent.showNewSubFolderPopup( _folder )\n        }\n\n    }\n\n}\n\n</script>","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./folders.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./folders.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./folders.vue?vue&type=template&id=c9e8de80&\"\nimport script from \"./folders.vue?vue&type=script&lang=js&\"\nexport * from \"./folders.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('ul',_vm._l((_vm.folders),function(_folder){return _c('li',{key:_folder.term_id,staticClass:\"folder--single-root has--sub-menu\",class:_vm.is_folder(_folder) && 'active',attrs:{\"data-folder\":_folder.term_id}},[_c('a',{style:({'color': _folder.color}),attrs:{\"href\":_vm.get_folder_url(_folder)},on:{\"contextmenu\":function($event){return _vm.folderActions( $event, _folder )}}},[_c('span',{staticClass:\"wp-adminify--folder-left\"},[_c('span',{staticClass:\"wp-adminify--icon-control\"},[(!_vm.folder_select_toggle)?_c('span',{staticClass:\"wp-adminify--icon dashicons dashicons-open-folder\"}):_vm._e(),_vm._v(\" \"),(_vm.folder_select_toggle)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_folder.selected),expression:\"_folder.selected\"}],staticClass:\"wp-adminify--control\",attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_folder.selected)?_vm._i(_folder.selected,null)>-1:(_folder.selected)},on:{\"!click\":function($event){$event.stopPropagation();},\"change\":function($event){var $$a=_folder.selected,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_folder, \"selected\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_folder, \"selected\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_folder, \"selected\", $$c)}}}}):_vm._e()]),_vm._v(\" \"),_c('span',{staticClass:\"wp-adminify--name\"},[_vm._v(_vm._s(_folder.name))])]),_vm._v(\" \"),_c('span',{staticClass:\"wp-adminify--count\"},[_vm._v(_vm._s(_folder.count))])]),_vm._v(\" \"),(_folder.children.length)?_c('folders',{staticClass:\"folder--sub-lists\",attrs:{\"folders\":_folder.children,\"folder_select_toggle\":_vm.folder_select_toggle}}):_vm._e(),_vm._v(\" \"),_c('ul',{staticClass:\"adminify--sub-menu\"},[_c('li',[_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.showNewSubFolderPopup( _folder )}}},[_vm._v(\"New Sub-folder\")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.showRenameFolderPopup( _folder )}}},[_vm._v(\"Rename\")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.showDeleteFolderPopup( _folder )}}},[_vm._v(\"Delete\")])])])],1)}),0)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"wp-adminify--folder-app\"}},[_c('div',{staticClass:\"wp-adminify--folder-widget\"},[_c('div',{staticClass:\"wp-adminify--folder-app\"},[_c('div',{staticClass:\"wp-adminify--folder-app--inner\"},[_c('div',{staticClass:\"folder--header\"},[_c('span',[_vm._v(\"Folders\")]),_vm._v(\" -\\n                    \"),_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.showNewFolderPopup.apply(null, arguments)}}},[_vm._v(\"Create New Folder\")])]),_vm._v(\" \"),_c('div',{staticClass:\"folder--actions\"},[_c('span',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.folder_select_toggle),expression:\"folder_select_toggle\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.folder_select_toggle)?_vm._i(_vm.folder_select_toggle,null)>-1:(_vm.folder_select_toggle)},on:{\"change\":function($event){var $$a=_vm.folder_select_toggle,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.folder_select_toggle=$$a.concat([$$v]))}else{$$i>-1&&(_vm.folder_select_toggle=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.folder_select_toggle=$$c}}}})]),_vm._v(\" \"),_c('a',{staticClass:\"btn--folder-rename\",attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.showRenameFolderPopup.apply(null, arguments)}}},[_vm._v(\"Rename\")]),_vm._v(\" \"),_c('a',{staticClass:\"btn--folder-delete\",attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.showDeleteFolderPopup.apply(null, arguments)}}},[_vm._v(\"Delete\")]),_vm._v(\" \"),_c('ul',{staticClass:\"folder-sort--list\"},[_vm._m(0),_vm._v(\" \"),_c('li',{staticClass:\"folder--sort has--sub-menu\"},[_vm._m(1),_vm._v(\" \"),_c('ul',{staticClass:\"adminify--sub-menu\"},[_c('li',[_c('a',{attrs:{\"data-sort\":\"a-z\",\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.sortFolders( $event )}}},[_vm._v(\"A → Z\")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"data-sort\":\"z-a\",\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.sortFolders( $event )}}},[_vm._v(\"Z → A\")])])])])])]),_vm._v(\" \"),_c('div',{staticClass:\"folder--search\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.filter_folder),expression:\"filter_folder\"}],attrs:{\"type\":\"text\",\"placeholder\":\"Search folder\"},domProps:{\"value\":(_vm.filter_folder)},on:{\"input\":function($event){if($event.target.composing)return;_vm.filter_folder=$event.target.value}}})]),_vm._v(\" \"),_c('ul',{staticClass:\"folder--stats\"},[_c('li',{staticClass:\"folder--single-all\",class:_vm.is_folder('all') && 'active',attrs:{\"data-folder\":\"all\"}},[_c('a',{attrs:{\"href\":_vm.get_folder_url('all')}},[_c('span',[_vm._v(\"All\")]),_c('span',{staticClass:\"wp-adminify--count\"},[_vm._v(_vm._s(_vm.total_posts_count))])])]),_vm._v(\" \"),_c('li',{staticClass:\"folder--single-uncategorized\",class:_vm.is_folder('uncategorized') && 'active',attrs:{\"data-folder\":\"uncategorized\"}},[_c('a',{attrs:{\"href\":_vm.get_folder_url('uncategorized')}},[_c('span',[_vm._v(\"Uncategorized\")]),_c('span',{staticClass:\"wp-adminify--count\"},[_vm._v(_vm._s(_vm.total_uncat_posts))])])])]),_vm._v(\" \"),(_vm.folders)?_c('folders',{staticClass:\"folder--lists\",attrs:{\"folders\":_vm.filtered_folders,\"folder_select_toggle\":_vm.folder_select_toggle}}):_vm._e()],1)])]),_vm._v(\" \"),_c('div',{staticClass:\"wp-adminify--popup-area\"},[_c('div',{staticClass:\"wp-adminify--popup-container\"},[_c('div',{staticClass:\"wp-adminify--popup-container_inner\"},[(_vm.create_folder_popup)?_c('div',{staticClass:\"popup--create-new-folder\"},[_c('a',{staticClass:\"wp-adminify--popup-close\",attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.hide_create_folder_popup.apply(null, arguments)}}},[_c('span',{staticClass:\"dashicons dashicons-no-alt\"})]),_vm._v(\" \"),(_vm.parent_folder)?[_c('h3',[_vm._v(\"New Sub Folder\")]),_vm._v(\" \"),(_vm.is_pro)?[_c('div',{staticClass:\"popup--new-folder__name\"},[_c('div',[_vm._v(\"Sub Folder Name\")]),_vm._v(\" \"),_c('div',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.new_folder_name),expression:\"new_folder_name\"}],attrs:{\"type\":\"text\",\"placeholder\":\"Write here\"},domProps:{\"value\":(_vm.new_folder_name)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.new_folder_name=$event.target.value},function($event){_vm.create_folder_error = null;}]}})])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{staticClass:\"popup--new-folder__color\"},[_c('div',[_vm._v(\"Colour Tag\")]),_vm._v(\" \"),_c('div',[_c('ul',{staticClass:\"wp-adminify--colors\"},_vm._l((_vm.color_tags),function(color_tag){return _c('li',{key:color_tag,class:color_tag == _vm.active_color_tag ? 'active' : ''},[_c('a',{style:(`background: ${color_tag};`),attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.active_color_tag = color_tag}}})])}),0)])]),_vm._v(\" \"),_c('a',{staticClass:\"button button-primary\",attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.saveNewFolder.apply(null, arguments)}}},[_vm._v(\"Save Folder\")]),_vm._v(\" \"),(_vm.create_folder_error)?_c('div',{staticClass:\"popup--new-folder-error\"},[_vm._v(_vm._s(_vm.create_folder_error))]):_vm._e()]:[_c('div',{staticClass:\"wp-adminify-folder--pro-notice\",domProps:{\"innerHTML\":_vm._s(_vm.pro_notice)}})]]:[_c('h3',[_vm._v(\"New Folder\")]),_vm._v(\" \"),(_vm.is_reached_limit)?[_c('div',{staticClass:\"wp-adminify-folder--pro-notice\",domProps:{\"innerHTML\":_vm._s(_vm.pro_notice)}})]:[_c('div',{staticClass:\"popup--new-folder__name\"},[_c('div',[_vm._v(\"Folder Name\")]),_vm._v(\" \"),_c('div',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.new_folder_name),expression:\"new_folder_name\"}],attrs:{\"type\":\"text\",\"placeholder\":\"Write here\"},domProps:{\"value\":(_vm.new_folder_name)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.new_folder_name=$event.target.value},function($event){_vm.create_folder_error = null;}]}})])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{staticClass:\"popup--new-folder__color\"},[_c('div',[_vm._v(\"Colour Tag\")]),_vm._v(\" \"),_c('div',[_c('ul',{staticClass:\"wp-adminify--colors\"},_vm._l((_vm.color_tags),function(color_tag){return _c('li',{key:color_tag,class:color_tag == _vm.active_color_tag ? 'active' : ''},[_c('a',{style:(`background: ${color_tag};`),attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.active_color_tag = color_tag}}})])}),0)])]),_vm._v(\" \"),_c('a',{staticClass:\"button button-primary\",attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.saveNewFolder.apply(null, arguments)}}},[_vm._v(\"Save Folder\")]),_vm._v(\" \"),(_vm.create_folder_error)?_c('div',{staticClass:\"popup--new-folder-error\"},[_vm._v(_vm._s(_vm.create_folder_error))]):_vm._e()]]],2):_vm._e(),_vm._v(\" \"),(_vm.rename_folder_popup)?_c('div',{staticClass:\"popup--rename-folder\"},[_c('a',{staticClass:\"wp-adminify--popup-close\",attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.hide_rename_folder_popup.apply(null, arguments)}}},[_c('span',{staticClass:\"dashicons dashicons-no-alt\"})]),_vm._v(\" \"),_c('h3',[_vm._v(\"Rename Folder\")]),_vm._v(\" \"),_c('div',{staticClass:\"popup--new-folder__name\"},[_c('div',[_vm._v(\"Rename Folder\")]),_vm._v(\" \"),_c('div',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.rename_folder_name),expression:\"rename_folder_name\"}],attrs:{\"type\":\"text\",\"placeholder\":\"Write here\"},domProps:{\"value\":(_vm.rename_folder_name)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.rename_folder_name=$event.target.value},function($event){_vm.rename_folder_error = null;}]}})])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{staticClass:\"popup--new-folder__color\"},[_c('div',[_vm._v(\"Change Color\")]),_vm._v(\" \"),_c('div',[_c('ul',{staticClass:\"wp-adminify--colors\"},_vm._l((_vm.get_color_tags()),function(color_tag){return _c('li',{key:color_tag,class:color_tag == _vm.active_color_tag ? 'active' : ''},[_c('a',{style:(`background: ${color_tag};`),attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.active_color_tag = color_tag}}})])}),0)])]),_vm._v(\" \"),_c('a',{staticClass:\"button button-primary\",attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.renameFolder.apply(null, arguments)}}},[_vm._v(\"Save Folder\")]),_vm._v(\" \"),(_vm.rename_folder_error)?_c('div',{staticClass:\"popup--new-folder-error\"},[_vm._v(_vm._s(_vm.rename_folder_error))]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.delete_folder_popup)?_c('div',{staticClass:\"popup--delete-folder\"},[_c('a',{staticClass:\"wp-adminify--popup-close\",attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.hide_delete_folder_popup.apply(null, arguments)}}},[_c('span',{staticClass:\"dashicons dashicons-no-alt\"})]),_vm._v(\" \"),_c('h3',[_vm._v(\"Are you sure you want to delete the selected folder?\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Items in the folder will not be deleted.\")]),_vm._v(\" \"),_c('div',[_c('a',{staticClass:\"button\",attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.hide_delete_folder_popup.apply(null, arguments)}}},[_vm._v(\"No, Keep it\")]),_vm._v(\" \"),_c('a',{staticClass:\"button button-primary\",attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.deleteFolders.apply(null, arguments)}}},[_vm._v(\"Yes, Delete it!\")])])]):_vm._e(),_vm._v(\" \"),(_vm.move_to_folder_popup)?_c('div',{staticClass:\"popup--move-to-folder\"},[_c('h3',[_vm._v(\"Few posts are already in another Folder\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Please choose a option whether you want to copy or move to new Folder.\")]),_vm._v(\" \"),_vm._m(2)]):_vm._e()])])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('li',{staticClass:\"folder--expand\"},[_c('a',{staticClass:\"btn--folder-expand\",attrs:{\"href\":\"#\"}},[_c('span',{staticClass:\"dashicons dashicons-arrow-down-alt2\"})])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('a',{staticClass:\"btn--folder-sort\",attrs:{\"href\":\"#\"}},[_c('span',{staticClass:\"dashicons dashicons-sort\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',[_c('a',{staticClass:\"button button-copy\",attrs:{\"href\":\"#\"}},[_vm._v(\"Copy To Folder\")]),_vm._v(\" \"),_c('a',{staticClass:\"button button-primary button-move\",attrs:{\"href\":\"#\"}},[_vm._v(\"Move To Folder\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\n\n    <div id=\"wp-adminify--folder-app\">\n\n        <div class=\"wp-adminify--folder-widget\">\n\n            <!-- Widget -->\n            <div class=\"wp-adminify--folder-app\">\n                <div class=\"wp-adminify--folder-app--inner\">\n\n                    <div class=\"folder--header\">\n                        <span>Folders</span> -\n                        <a href=\"#\" @click.prevent=\"showNewFolderPopup\">Create New Folder</a>\n                    </div>\n\n                    <div class=\"folder--actions\">\n                        <span><input type=\"checkbox\" v-model=\"folder_select_toggle\" /></span>\n                        <a href=\"#\" class=\"btn--folder-rename\" @click.prevent.stop=\"showRenameFolderPopup\">Rename</a>\n                        <a href=\"#\" class=\"btn--folder-delete\" @click.prevent.stop=\"showDeleteFolderPopup\">Delete</a>\n                        <ul class=\"folder-sort--list\">\n                            <li class=\"folder--expand\">\n                                <a href=\"#\" class=\"btn--folder-expand\"><span class=\"dashicons dashicons-arrow-down-alt2\"></span></a>\n                            </li>\n                            <li class=\"folder--sort has--sub-menu\">\n                                <a href=\"#\" class=\"btn--folder-sort\"><span class=\"dashicons dashicons-sort\"></span></a>\n                                <ul class=\"adminify--sub-menu\">\n                                    <li><a data-sort=\"a-z\" href=\"#\" @click.prevent=\"sortFolders( $event )\">A → Z</a></li>\n                                    <li><a data-sort=\"z-a\" href=\"#\" @click.prevent=\"sortFolders( $event )\">Z → A</a></li>\n                                </ul>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <div class=\"folder--search\">\n                        <input type=\"text\" placeholder=\"Search folder\" v-model=\"filter_folder\">\n                    </div>\n\n                    <ul class=\"folder--stats\">\n                        <li class=\"folder--single-all\" :class=\"is_folder('all') && 'active'\" data-folder=\"all\"><a :href=\"get_folder_url('all')\"><span>All</span><span class=\"wp-adminify--count\">{{ total_posts_count }}</span></a></li>\n                        <li class=\"folder--single-uncategorized\" :class=\"is_folder('uncategorized') && 'active'\" data-folder=\"uncategorized\"><a :href=\"get_folder_url('uncategorized')\"><span>Uncategorized</span><span class=\"wp-adminify--count\">{{ total_uncat_posts }}</span></a></li>\n                    </ul>\n\n                    <folders :folders=\"filtered_folders\" :folder_select_toggle=\"folder_select_toggle\" class=\"folder--lists\" v-if=\"folders\"></folders>\n\n                    <!-- <div v-html=\"pro_notice\"></div> -->\n\n                </div>\n            </div>\n\n        </div>\n\n        <!-- Popup -->\n        <div class=\"wp-adminify--popup-area\">\n\n            <div class=\"wp-adminify--popup-container\">\n\n                <div class=\"wp-adminify--popup-container_inner\">\n\n                    <!-- Create Folder Popup -->\n                    <div class=\"popup--create-new-folder\" v-if=\"create_folder_popup\">\n\n                        <a class=\"wp-adminify--popup-close\" href=\"#\" @click.prevent=\"hide_create_folder_popup\"><span class=\"dashicons dashicons-no-alt\"></span></a>\n\n                        <template v-if=\"parent_folder\">\n\n                            <h3>New Sub Folder</h3>\n\n                            <template v-if=\"is_pro\">\n\n                                <div class=\"popup--new-folder__name\">\n                                    <div>Sub Folder Name</div>\n                                    <div><input type=\"text\" v-model=\"new_folder_name\" @input=\"create_folder_error = null;\" placeholder=\"Write here\"></div>\n                                </div>\n\n                                <br />\n\n                                <div class=\"popup--new-folder__color\">\n                                    <div>Colour Tag</div>\n                                    <div>\n                                        <ul class=\"wp-adminify--colors\">\n                                            <li v-for=\"color_tag in color_tags\" :key=\"color_tag\" :class=\"color_tag == active_color_tag ? 'active' : ''\"><a href=\"#\" @click.prevent=\"active_color_tag = color_tag\" :style=\"`background: ${color_tag};`\"></a></li>\n                                        </ul>\n                                    </div>\n                                </div>\n\n                                <a href=\"#\" class=\"button button-primary\" @click.prevent=\"saveNewFolder\">Save Folder</a>\n\n                                <div class=\"popup--new-folder-error\" v-if=\"create_folder_error\">{{ create_folder_error }}</div>\n\n                            </template>\n\n                            <template v-else>\n\n                                <div class=\"wp-adminify-folder--pro-notice\" v-html=\"pro_notice\"></div>\n\n                            </template>\n\n\n                        </template>\n\n                        <template v-else>\n\n                            <h3>New Folder</h3>\n\n                            <template v-if=\"is_reached_limit\">\n\n                                <div class=\"wp-adminify-folder--pro-notice\" v-html=\"pro_notice\"></div>\n\n                            </template>\n\n                            <template v-else>\n\n                                <div class=\"popup--new-folder__name\">\n                                    <div>Folder Name</div>\n                                    <div><input type=\"text\" v-model=\"new_folder_name\" @input=\"create_folder_error = null;\" placeholder=\"Write here\"></div>\n                                </div>\n\n                                <br />\n\n                                <div class=\"popup--new-folder__color\">\n                                    <div>Colour Tag</div>\n                                    <div>\n                                        <ul class=\"wp-adminify--colors\">\n                                            <li v-for=\"color_tag in color_tags\" :key=\"color_tag\" :class=\"color_tag == active_color_tag ? 'active' : ''\"><a href=\"#\" @click.prevent=\"active_color_tag = color_tag\" :style=\"`background: ${color_tag};`\"></a></li>\n                                        </ul>\n                                    </div>\n                                </div>\n\n                                <a href=\"#\" class=\"button button-primary\" @click.prevent=\"saveNewFolder\">Save Folder</a>\n\n                                <div class=\"popup--new-folder-error\" v-if=\"create_folder_error\">{{ create_folder_error }}</div>\n\n                            </template>\n\n                        </template>\n\n                    </div>\n\n                    <!-- Rename Folder Popup -->\n                    <div class=\"popup--rename-folder\" v-if=\"rename_folder_popup\">\n\n                        <a class=\"wp-adminify--popup-close\" href=\"#\" @click.prevent=\"hide_rename_folder_popup\"><span class=\"dashicons dashicons-no-alt\"></span></a>\n\n                        <h3>Rename Folder</h3>\n\n                        <div class=\"popup--new-folder__name\">\n                            <div>Rename Folder</div>\n                            <div><input type=\"text\" v-model=\"rename_folder_name\" @input=\"rename_folder_error = null;\" placeholder=\"Write here\"></div>\n                        </div>\n\n                        <br />\n\n                        <div class=\"popup--new-folder__color\">\n                            <div>Change Color</div>\n                            <div>\n                                <ul class=\"wp-adminify--colors\">\n                                    <li v-for=\"color_tag in get_color_tags()\" :key=\"color_tag\" :class=\"color_tag == active_color_tag ? 'active' : ''\">\n                                        <a href=\"#\" @click.prevent=\"active_color_tag = color_tag\" :style=\"`background: ${color_tag};`\"></a>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n\n                        <a href=\"#\" class=\"button button-primary\" @click.prevent=\"renameFolder\">Save Folder</a>\n\n                        <div class=\"popup--new-folder-error\" v-if=\"rename_folder_error\">{{ rename_folder_error }}</div>\n\n                    </div>\n\n                    <!-- Delete Folder Popup -->\n                    <div class=\"popup--delete-folder\" v-if=\"delete_folder_popup\">\n\n                        <a class=\"wp-adminify--popup-close\" href=\"#\" @click.prevent=\"hide_delete_folder_popup\"><span class=\"dashicons dashicons-no-alt\"></span></a>\n\n                        <h3>Are you sure you want to delete the selected folder?</h3>\n\n                        <p>Items in the folder will not be deleted.</p>\n\n                        <div>\n                            <a href=\"#\" class=\"button\" @click.prevent=\"hide_delete_folder_popup\">No, Keep it</a>\n                            <a href=\"#\" class=\"button button-primary\" @click.prevent=\"deleteFolders\">Yes, Delete it!</a>\n                        </div>\n\n                    </div>\n\n                    <!-- Copy/Move Mode Folder Popup -->\n                    <div class=\"popup--move-to-folder\" v-if=\"move_to_folder_popup\">\n\n                        <h3>Few posts are already in another Folder</h3>\n\n                        <p>Please choose a option whether you want to copy or move to new Folder.</p>\n\n                        <div>\n                            <a href=\"#\" class=\"button button-copy\">Copy To Folder</a>\n                            <a href=\"#\" class=\"button button-primary button-move\">Move To Folder</a>\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n\n</template>\n\n<script>\n\nimport Cookies from 'js-cookie';\nconst $ = jQuery;\n\nexport default {\n\n    data() {\n\n        return {\n            post_type: '',\n            post_type_tax: '',\n            folders: [],\n            posts: {},\n            filter_folder: '',\n            total_uncat_posts: '',\n            total_uncat_posts: '',\n            folder_select_toggle: false,\n\n            create_folder_popup: false,\n            new_folder_name: null,\n            create_folder_error: null,\n\n            rename_folder_popup: false,\n            rename_folder_name: null,\n            rename_folder_error: null,\n\n            delete_folder_popup: false,\n            delete_folder_error: null,\n\n            move_to_folder_popup: false,\n\n            color_tags: ['#7B61FF', '#0347FF', '#F24AE1', '#ED2E7E', '#FFC804', '#00BA88'],\n            active_color_tag: '#7B61FF',\n\n            currentView: 'all',\n            sort: 'a-z',\n\n            is_pro: !! wp_adminify__folder_data.is_pro,\n            pro_notice: wp_adminify__folder_data.pro_notice,\n\n            total_posts: {\n                'auto-draft': 0,\n                'draft': 0,\n                'future': 0,\n                'inherit': 0,\n                'pending': 0,\n                'private': 0,\n                'publish': 0,\n                'request-completed': 0,\n                'request-confirmed': 0,\n                'request-failed': 0,\n                'request-pending': 0,\n                'trash': 0\n            },\n        }\n\n    },\n\n    mounted() {\n\n        this.post_type          = wp_adminify__folder_data.post_type;\n        this.post_type_tax      = wp_adminify__folder_data.post_type_tax;\n        this.folders            = wp_adminify__folder_data.folders;\n        this.total_posts        = wp_adminify__folder_data.total_posts;\n        this.total_uncat_posts  = wp_adminify__folder_data.total_uncat_posts;\n        this._active_color_tag  = this.active_color_tag;\n        this.adminurl           = wp_adminify__folder_data.adminurl;\n        this.folder_hierarchy   = wp_adminify__folder_data.folder_hierarchy;\n\n        this.folders_to_edit    = [];\n\n        let sort = Cookies.get( this.post_type_tax + '__sort' );\n        if ( sort ) this.sort = sort;\n\n        this.init_folder_events();\n\n        $(function() {\n\n            this.init_draggable_events();\n            this.init_droppable_events();\n            this.reset_on_other_ajax_events();\n            this.init_submenu_events();\n\n            this.set_posts_folders();\n\n        }.bind(this));\n\n    },\n\n\tmethods: {\n\n        set_posts_folders() {\n            let that = this;\n            $('#the-list .adminify-move-file').each(function() {\n                let id = $(this).data('id');\n                let folders = $(this).data('folders');\n                folders = folders ? String( folders ).split( ',' ).map( folder => Number(folder) ) : [];\n                that.posts[id] = folders;\n            });\n        },\n\n        get_folder_by_id( id ) {\n            return this.folders.find( folder => folder.term_id == id );\n        },\n\n        get_folder_ids_by_post_id( post_id ) {\n            return this.posts[ post_id ];\n        },\n\n        init_submenu_events() {\n\n            $('.folder--actions .has--sub-menu > a').on('click', function( event ) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n                $(this).parent().toggleClass('sub-menu--open');\n            });\n\n            $('body').on('click', function() {\n                $('.has--sub-menu.sub-menu--open').removeClass('sub-menu--open');\n            });\n\n        },\n\n        reset_on_other_ajax_events() {\n\n            $(document).ajaxComplete(function( event, xhr, settings ) {\n\n                if ( settings.dataType == 'html' ) {\n                    return this.init_draggable_events();\n                }\n\n                if ( ! settings.data ) return;\n\n                let accepted = [ 'inline-save', 'query-attachments', 'delete-post' ].some( _action => settings.data.indexOf( `action=${_action}` ) != -1 );\n\n                if ( accepted ) {\n                    setTimeout( () => {\n                        this.init_draggable_events();\n                        this.refresh_folders_data_ajax();\n                    }, 100 );\n                }\n\n            }.bind(this));\n\n            if ( wp.Uploader && wp.Uploader.queue ) {\n\n                wp.Uploader.queue.on('reset', () => {\n                    this.init_draggable_events();\n                    this.refresh_folders_data_ajax();\n                });\n\n            }\n\n        },\n\n        init_folder_events() {\n\n            let that = this;\n\n            if ( wp.media ) {\n\n                var AttachmentsView = wp.media.view.Attachments;\n\n                wp.media.view.Attachments = AttachmentsView.extend({\n\n                    initialize: function() {\n\n                        var _this = this;\n\n                        AttachmentsView.prototype.initialize.apply( this, arguments );\n\n                        $('.folder--lists, .folder--stats').on('click', 'li a', function( event ) {\n\n                            event.preventDefault();\n\n                            let url = $(this).attr('href');\n\n                            if ( $('.attachments-browser .attachments').length ) {\n\n                                _this.model.get('library').props.set( 'media_folder', that.getUrlParameter( url, 'media_folder' ) );\n\n                                let state = that.getUrlParameter( url );\n                                window.history.pushState( state, '', url )\n\n                            }\n\n                        });\n\n                    }\n\n                });\n\n            } else {\n\n                $('.folder--lists, .folder--stats').on('click', 'li a', function( event ) {\n\n                    event.preventDefault();\n\n                    let url = $(this).attr('href');\n\n                    $('.folder--lists, .folder--stats').find('li').removeClass('active');\n                    $(this).closest('li').addClass('active');\n\n                    if ( $('#the-list').length ) {\n                        $( '#the-list' ).load( `${url} #the-list > tr` );\n                        let state = that.getUrlParameter( url );\n                        window.history.pushState( state, '', url )\n                    }\n\n                });\n\n            }\n\n        },\n\n        folderActions( event, folder ) {\n\n            event.preventDefault();\n\n            this.folders.forEach( _folder => {\n                _folder.contexted = false;\n            });\n\n            folder.contexted = true;\n\n            $('.folder--lists li').removeClass('sub-menu--open');\n\n            $( event.target ).closest('li').addClass('sub-menu--open');\n\n        },\n\n        get_active_folder() {\n\n            return $('.folder--lists li.active').toArray().map( _folder_dom => $(_folder_dom).data('folder') );\n\n        },\n\n        is_folder( folder ) {\n            \n            // let URLParams = new URLSearchParams( window.location.href );\n            // let currentFolder = URLParams.get( 'folder' );\n\n            // if ( folder == 'all' && ! currentFolder ) return true;\n            // if ( this.get_folder_url(  ) == currentFolder ) return true;\n\n\n\n            // return false;\n\n\n\n\n            let currenturl = window.location.href;\n\n            if ( folder == 'all' && currenturl.indexOf(wp_adminify__folder_data.post_type_tax) > -1 ) return false;\n\n            return currenturl == this.get_folder_url(folder);\n\n        },\n\n        getUrlParameter( querystring, sParam ) {\n\n            querystring = querystring.substring(querystring.indexOf('?') + 1);\n\n            let params = new URLSearchParams(querystring);\n            let obj = {};\n\n            for (let key of params.keys()) {\n                if (params.getAll(key).length > 1) {\n                    obj[key] = params.getAll(key);\n                } else {\n                    obj[key] = params.get(key);\n                }\n            }\n\n            if ( sParam ) {\n                if ( sParam in obj ) return obj[sParam];\n                return '';\n            }\n\n            return obj;\n\n        },\n\n        get_folder_url( folder ) {\n\n            const queryStrings = location.search;\n            const searchParams = new URLSearchParams( queryStrings );\n            const postType = searchParams.get('post_type');\n            const baseURL = new URL( location.protocol + '//' + location.host + location.pathname );\n\n            if ( postType ) baseURL.searchParams.set( 'post_type', postType );\n\n            if ( folder !== 'all' ) {\n                const folderSlug = ( folder == 'uncategorized' ) ? '-1' : folder.slug;\n                baseURL.searchParams.set( this.post_type_tax, folderSlug );\n            }\n\n            for ( const [key, value] of searchParams.entries() ) {\n                if ( key == 'post_type' ) continue;\n                if ( key == this.post_type_tax ) continue;\n                baseURL.searchParams.set( key, value );\n            }\n\n            return baseURL.toJSON();\n\n        },\n\n        showPopupOverlay() {\n            $('body').addClass('wp-adminify--popup-show');\n        },\n\n        hidePopupOverlay() {\n            $('body').removeClass('wp-adminify--popup-show');\n        },\n\n        showNewFolderPopup() {\n\n            this.showPopupOverlay();\n\n            this.create_folder_popup = true;\n            this.parent_folder = null;\n            this.active_color_tag = this.color_tags[0];\n            this._active_color_tag  = this.active_color_tag;\n\n        },\n\n        showNewSubFolderPopup( folder ) {\n\n            this.showPopupOverlay();\n\n            this.create_folder_popup = true;\n            this.parent_folder = folder.term_id;\n            this.active_color_tag = this.color_tags[0];\n            this._active_color_tag  = this.active_color_tag;\n\n        },\n\n        showRenameFolderPopup( folder = false ) {\n\n            // Set Editable Folders\n\n            if ( folder && folder.term_id ) {\n                this.folders_to_edit = [folder];\n            } else if ( this.get_active_folder().length ) {\n                this.folders_to_edit = [this.folders.find( _folder => _folder.term_id == this.get_active_folder()[0] )];\n            } else {\n                this.folders_to_edit = null;\n            }\n\n            if ( !this.folders_to_edit || !this.folders_to_edit.length ) return;\n\n            folder = this.folders_to_edit[0];\n\n            this._rename_folder_name = folder.name;\n            this.rename_folder_name = folder.name;\n            this.active_color_tag = folder.color;\n            this._active_color_tag = this.active_color_tag;\n\n            this.showPopupOverlay();\n            this.rename_folder_popup = true;\n\n        },\n\n        showDeleteFolderPopup( folder = false ) {\n\n            // Set Editable Folders\n\n            if ( folder && folder.term_id ) {\n                this.folders_to_edit = [folder];\n            } else if ( this.folder_select_toggle ) {\n                this.folders_to_edit = this.folders.filter( _folder => _folder.selected );\n            } else if ( this.get_active_folder().length ) {\n                this.folders_to_edit = [this.folders.find( _folder => _folder.term_id == this.get_active_folder()[0] )];\n            } else {\n                this.folders_to_edit = null;\n            }\n\n            if ( !this.folders_to_edit || !this.folders_to_edit.length ) return;\n\n            this.showPopupOverlay();\n            this.delete_folder_popup = true;\n\n        },\n\n        hide_rename_folder_popup() {\n            this.hidePopupOverlay();\n            this.rename_folder_popup = false;\n            this.rename_folder_error = null;\n        },\n\n        hide_delete_folder_popup() {\n            this.hidePopupOverlay();\n            this.delete_folder_popup = false;\n            this.delete_folder_error = null;\n        },\n\n        hide_move_to_folder_popup() {\n            this.hidePopupOverlay();\n            this.move_to_folder_popup = false;\n        },\n\n        hide_create_folder_popup() {\n\n            this.hidePopupOverlay();\n\n            this.create_folder_popup = false;\n            this.new_folder_name = null;\n            this.create_folder_error = null;\n            this.active_color_tag = this._active_color_tag;\n\n        },\n\n        saveNewFolder() {\n\n            let _this = this;\n\n            let data = {\n                post_type: wp_adminify__folder_data.post_type,\n                post_type_tax: wp_adminify__folder_data.post_type_tax,\n                new_folder_name: this.new_folder_name,\n                folder_color_tag: this.active_color_tag,\n                parent_folder: this.parent_folder,\n                action: 'adminify_folder',\n                route: 'create_new_folder',\n                _ajax_nonce: wp_adminify__folder_data.nonce\n            }\n\n            if ( this.is_pro ) {\n                data.parent_folder = this.parent_folder;\n            }\n\n            $.ajax({\n                url: wp_adminify__folder_data.ajaxurl,\n                method: 'post',\n                data: data\n            }).done( ( response, status, xhr ) => {\n\n                if ( response.success && xhr.status == 200 ) {\n                    _this.refresh_folders_data( response.data );\n                    _this.hide_create_folder_popup();\n                } else {\n                    _this.create_folder_error = response.data.message;\n                }\n\n            });\n\n        },\n\n        renameFolder( folder = false ) {\n\n            let _this = this;\n            let changes = false;\n\n            if ( this.active_color_tag != this._active_color_tag ) changes = true;\n\n            if ( ! changes && this._rename_folder_name.trim() != this.rename_folder_name.trim() ) changes = true;\n\n            if ( ! changes ) return this.hide_rename_folder_popup();\n\n            $.ajax({\n                url: wp_adminify__folder_data.ajaxurl,\n                method: 'post',\n                data: {\n                    post_type: wp_adminify__folder_data.post_type,\n                    post_type_tax: wp_adminify__folder_data.post_type_tax,\n                    term_id: _this.folders_to_edit[0].term_id,\n                    folder_name: _this.rename_folder_name,\n                    folder_color_tag: _this.active_color_tag,\n                    action: 'adminify_folder',\n                    route: 'rename_folder',\n                    _ajax_nonce: wp_adminify__folder_data.nonce\n                }\n            }).done( ( response, status, xhr ) => {\n\n                if ( response.success && xhr.status == 200 ) {\n                    _this.refresh_folders_data( response.data );\n                    _this.hide_rename_folder_popup();\n                    $('.folder--lists li.active > a').trigger('click');\n                } else {\n                    _this.rename_folder_error = response.data.message;\n                }\n\n            });\n\n        },\n\n        init_draggable_events() {\n\n            $('.adminify-move-file:not(.ui-draggable), .adminify-move-multiple:not(.ui-draggable)').draggable({\n\n                revert: \"invalid\",\n                containment: \"document\",\n                helper: \"clone\",\n                cursor: \"move\",\n\n                start: function( event, ui ) {\n                    $(this).closest('td').addClass('adminify-draggable');\n                    $('body').addClass('adminify--items-dragging');\n                },\n\n                stop: function( event, ui ) {\n                    $(this).closest('td').removeClass('adminify-draggable');\n                    $('body').removeClass('adminify--items-dragging');\n                },\n\n                // helper: function (event, ui) {\n                //     console.log( event )\n                //     console.log( this )\n                //     // if ( ui.draggable.hasClass( 'adminify-move-multiple') ) {\n                //     let items = $('#the-list .check-column input[type=\"checkbox\"]:checked').length;\n                //     return $(`<div>Move ${items} Items</div>`);\n                    \n                //     // $('.adminify--selected-items').remove();\n                //     // let selectedItems = $('.attachments-browser li.attachment.selected').length;\n                //     // selectedItems = (selectedItems < 2) ? '1 Item' : `${selectedItems} Items`;\n                //     // return $(`<div class='adminify--selected-items'><span class='total-post-count'>${selectedItems} Selected</span></div>`);\n                // },\n\n            });\n\n            $('.attachments-browser li.attachment:not(.ui-draggable)').draggable({\n\n                revert: \"invalid\",\n                containment: \"document\",\n                cursor: \"move\",\n                cursorAt: {\n                    left: 0,\n                    top: 0\n                },\n\n                start: function( event, ui ) {\n                    $('body').addClass('adminify--items-dragging');\n                },\n\n                stop: function( event, ui ) {\n\t\t\t\t    $('.adminify--selected-items').remove();\n                    $('body').removeClass('adminify--items-dragging');\n                },\n\n            });\n\n        },\n\n        async init_droppable_events() {\n\n            let _this = this;\n\n            $('.folder--lists li a:not(.ui-droppable), .folder--stats li.folder--single-uncategorized a:not(.ui-droppable)').droppable({\n\n                accept: '.adminify-move-file, .adminify-move-multiple, .attachments-browser li.attachment',\n                hoverClass: 'adminify-drop-hover',\n                classes: {\n                    'ui-droppable-active': 'ui-state-highlight'\n                },\n                tolerance: 'pointer',\n\n                drop: async function( event, ui ) {\n\n                    let folderID = $(this).parent(\"li\").data('folder');\n\n                    if ( ! folderID ) return;\n\n                    let postIDs = [];\n\n                    if ( ui.draggable.hasClass( 'adminify-move-multiple') ) {\n\n                        postIDs = $('#the-list .check-column input[type=checkbox]:checked').toArray().map( _input => _input.value );\n\n                        $('.wp-list-table .manage-column.check-column input').prop('checked', false);\n\n                    } else if ( ui.draggable.hasClass('adminify-move-file') ) {\n\n                        postIDs = [ ui.draggable[0].attributes['data-id'].nodeValue ];\n\n                    } else if ( ui.draggable.hasClass('attachment') ) {\n\n                        if ( $('.media-toolbar.wp-filter').hasClass('media-toolbar-mode-select') ) {\n                            postIDs = $('.attachments-browser li.attachment.selected').toArray().map( _media => _media.dataset.id );\n                        } else {\n                            postIDs = [ ui.draggable[0].attributes['data-id'].nodeValue ];\n                        }\n\n                    }\n\n                    if ( ! postIDs.length ) return;\n\n                    var move_to_folder = false;\n\n                    if ( folderID != 'uncategorized' ) {\n\n                        let folder_found = postIDs.some( post_id => {\n                            let folder_ids = _this.get_folder_ids_by_post_id( post_id );\n                            if ( folder_ids.length ) return true;\n                            return false;\n                        });\n    \n                        if ( folder_found ) {\n                            move_to_folder = await _this.shouldWeMoveToFolder();\n                        }\n\n                    }\n\n                    if ( ! ui.draggable.hasClass('attachment') ) {\n\n                        let mode = $('input[name=post_view]').first().val() || 'list';\n\n                        $.ajax({\n\n                            url: wp_adminify__folder_data.ajaxurl,\n                            method: 'post',\n                            data: {\n                                post_ids: postIDs,\n                                folder_id: folderID,\n                                post_type: wp_adminify__folder_data.post_type,\n                                post_type_tax: wp_adminify__folder_data.post_type_tax,\n                                action: 'adminify_folder',\n                                route: 'move_to_folder',\n                                move_to_folder: move_to_folder,\n                                screen: pagenow,\n                                mode: mode,\n                                _ajax_nonce: wp_adminify__folder_data.nonce\n                            }\n\n                        }).done( ( response, status ) => {\n\n                            if ( response.success ) {\n                                _this.refresh_rows();\n                                _this.refresh_folders_data( response.data );\n                            }\n\n                        });\n\n                    }\n\n                    if ( ui.draggable.hasClass('attachment') ) {\n\n                        $.ajax({\n                            url: wp_adminify__folder_data.ajaxurl,\n                            method: 'post',\n                            data: {\n                                post_ids: postIDs,\n                                folder_id: folderID,\n                                post_type: wp_adminify__folder_data.post_type,\n                                post_type_tax: wp_adminify__folder_data.post_type_tax,\n                                action: 'adminify_folder',\n                                route: 'move_to_folder',\n                                copy_type: copy_type,\n                                screen: pagenow,\n                                mode: 'grid',\n                                _ajax_nonce: wp_adminify__folder_data.nonce\n                            }\n                        }).done( ( response, status ) => {\n\n                            if ( response.success ) {\n                                _this.refresh_rows();\n                                _this.refresh_folders_data( response.data );\n                            }\n\n                        });\n\n                    }\n\n                }\n\n            });\n\n        },\n\n        shouldWeMoveToFolder() {\n            this.showPopupOverlay();\n            this.move_to_folder_popup = true;\n\n            return new Promise( resolve => {\n                jQuery('body').on('click.promptDialog', '.button-move, .button-copy', function(e) {\n                    e.preventDefault();\n                    if ( jQuery(this).hasClass('button-move') ) resolve( true );\n                    resolve( false );\n                });\n            })\n            .finally( () => {\n                jQuery('.button-move, .button-copy').off('click.promptDialog');\n                this.hidePopupOverlay();\n                this.move_to_folder_popup = false;\n            });\n        },\n\n        refresh_rows() {\n\n            let $currentItem = $('.folder--lists li.active, .folder--stats li.active').first();\n\n            if ( ! $currentItem.length ) $currentItem = $('.folder--stats li').first();\n\n            $currentItem.children('a').trigger('click');\n\n        },\n\n        get_allowed_status() {\n\n            return [ 'pending', 'draft', 'future', 'private', 'publish', 'inherit'];\n\n        },\n\n        refresh_folders_data( data = {} ) {\n\n            this.folders = data.folders;\n            this.total_posts = data.total_posts;\n            this.total_uncat_posts = data.total_uncat_posts;\n            this.folder_hierarchy = data.folder_hierarchy;\n\n            setTimeout( () => {\n                this.init_droppable_events();\n                this.init_draggable_events();\n                this.set_posts_folders();\n            }, 200 );\n\n        },\n\n        refresh_folders_data_ajax() {\n\n            let _this = this;\n\n            $.ajax({\n                url: wp_adminify__folder_data.ajaxurl,\n                method: 'post',\n                data: {\n                    post_type: wp_adminify__folder_data.post_type,\n                    post_type_tax: wp_adminify__folder_data.post_type_tax,\n                    action: 'adminify_folder',\n                    route: 'refresh_folders',\n                    _ajax_nonce: wp_adminify__folder_data.nonce\n                }\n            }).done( ( response, status ) => {\n\n                if ( response.success ) {\n                    _this.refresh_folders_data( response.data );\n                }\n\n            });\n\n        },\n\n        get_color_tags() {\n\n            if ( !this.folders_to_edit && !this.folders_to_edit.length ) return;\n\n            let folder = this.folders_to_edit[0];\n            let active_color = '';\n\n            if ( folder && folder.color ) {\n                active_color = folder.color;\n            }\n\n            if ( ! active_color || this.color_tags.includes(active_color) ) return this.color_tags;\n\n            return this.color_tags.concat( [active_color] );\n\n        },\n\n        deleteFolders() {\n\n            let _this = this;\n            let folders = this.folders_to_edit;\n\n            if ( ! folders.length ) return this.hide_delete_folder_popup();\n\n            folders = folders.map( _folder => _folder.term_id );\n\n            $.ajax({\n                url: wp_adminify__folder_data.ajaxurl,\n                method: 'post',\n                data: {\n                    post_type: wp_adminify__folder_data.post_type,\n                    post_type_tax: wp_adminify__folder_data.post_type_tax,\n                    term_ids: folders,\n                    action: 'adminify_folder',\n                    route: 'delete_folders',\n                    _ajax_nonce: wp_adminify__folder_data.nonce\n                }\n            }).done( ( response, status, xhr ) => {\n\n                if ( response.success && xhr.status == 200 ) {\n                    _this.refresh_folders_data( response.data );\n                    _this.hide_delete_folder_popup();\n                    $('.folder--lists, .folder--stats').find('li.active > a').trigger('click');\n                }\n\n            });\n\n        },\n\n        sortFolders( event ) {\n\n            let sort = $(event.currentTarget).data('sort');\n\n            if ( sort ) {\n                Cookies.set( this.post_type_tax + '__sort', sort );\n                this.sort = sort;\n            }\n\n        }\n\n\t},\n\n    computed: {\n\n        _filter_folder() {\n            return this.filter_folder.trim().toLowerCase();\n        },\n\n        filtered_folders() {\n\n            let that = this;\n\n            // Set Default Options\n            let folders = this.folders.map( _folder => {\n                _folder.selected = false;\n                _folder.contexted = false;\n                _folder.children = [];\n                return _folder;\n            });\n\n            // Sort for Folders\n            folders = folders.sort( (a, b) => {\n\n                if ( this.sort == 'a-z' ) {\n                    if ( a.name < b.name) { return -1; }\n                    if ( a.name > b.name) { return 1; }\n                }\n\n                if ( this.sort == 'z-a' ) {\n                    if ( a.name < b.name) { return 1; }\n                    if ( a.name > b.name) { return -1; }\n                }\n\n                return 0;\n\n            });\n\n            function addChild( folder, _folders ) {\n\n                that.folder_hierarchy[folder.term_id].forEach( child_id => {\n\n                    let child_folder = folders.find( _folder => _folder.term_id == child_id );\n                    let child_folder_index = folders.findIndex( _folder => _folder.term_id == child_id );\n\n                    if ( child_folder && child_folder_index > -1 ) {\n\n                        if ( ! folder.children.find( _fol_ch => _fol_ch.term_id == child_folder.term_id ) ) {\n\n                            folder.children.push( child_folder );\n\n                            child_folder = folder.children.find( _folder => _folder.term_id == child_id );\n\n                            if ( child_id in that.folder_hierarchy ) addChild( child_folder, _folders );\n\n                        }\n\n                    }\n\n                });\n\n            }\n\n            // Search Filter\n            if ( this._filter_folder ) {\n\n                let _folders = folders.filter( _folder => {\n                    return _folder.name.toLowerCase().search( this._filter_folder.toLowerCase() ) > -1;\n                });\n\n                if ( _folders.length ) return _folders;\n\n            }\n\n            // Set Sub Folders\n            folders.forEach( folder => {\n\n                if ( folder.term_id in that.folder_hierarchy ) {\n                    addChild( folder, folders );\n                }\n\n            });\n\n            // Cleanup Extra Sub Folders\n            for ( let parent_item in that.folder_hierarchy ) {\n                that.folder_hierarchy[parent_item].forEach( child_id => {\n                    let index = folders.findIndex( _folder => _folder.term_id == child_id );\n                    folders.splice( index, 1 );\n                });\n            }\n\n            return folders;\n        },\n\n        total_posts_count() {\n            let total = 0;\n            this.get_allowed_status().forEach( status => {\n                total += Number( this.total_posts[status] );\n            });\n            return total;\n        },\n\n        is_reached_limit() {\n            if ( this.is_pro ) return false; // go unlimited\n            if ( this.folders && this.folders.length ) {\n                return this.folders.length >= 3;\n            }\n            return false;\n        }\n\n    },\n\n    watch: {\n\n        filter_folder() {\n\n            setTimeout( () => {\n                this.init_draggable_events();\n                this.init_droppable_events();\n            }, 50 );\n\n        }\n\n    }\n\n}\n</script>\n","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./folder-app.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./folder-app.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./folder-app.vue?vue&type=template&id=0f464020&\"\nimport script from \"./folder-app.vue?vue&type=script&lang=js&\"\nexport * from \"./folder-app.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["Vue","require","jQuery","$","length","el","template","props","folders","type","required","folder_select_toggle","methods","is_folder","get_folder_url","folderActions","showRenameFolderPopup","showDeleteFolderPopup","showNewSubFolderPopup","render","_vm","this","_c","_self","_l","_folder","key","term_id","staticClass","class","attrs","style","color","on","$event","_e","_v","directives","name","rawName","value","selected","expression","domProps","Array","isArray","_i","stopPropagation","$$a","$$el","target","$$c","checked","$$i","$set","concat","slice","_s","count","children","preventDefault","data","post_type","post_type_tax","posts","filter_folder","total_uncat_posts","wp_adminify__folder_data","mounted","set_posts_folders","that","get_folder_by_id","get_folder_ids_by_post_id","init_submenu_events","event","reset_on_other_ajax_events","setTimeout","wp","init_folder_events","initialize","AttachmentsView","_this","window","folder","get_active_folder","getUrlParameter","querystring","params","obj","baseURL","searchParams","showPopupOverlay","hidePopupOverlay","showNewFolderPopup","hide_rename_folder_popup","hide_delete_folder_popup","hide_move_to_folder_popup","hide_create_folder_popup","saveNewFolder","new_folder_name","folder_color_tag","parent_folder","action","route","_ajax_nonce","url","method","renameFolder","folder_name","init_draggable_events","revert","containment","helper","cursor","start","stop","cursorAt","left","top","init_droppable_events","accept","hoverClass","classes","tolerance","drop","folderID","postIDs","move_to_folder","folder_found","mode","post_ids","folder_id","screen","copy_type","shouldWeMoveToFolder","e","resolve","refresh_rows","$currentItem","get_allowed_status","refresh_folders_data","refresh_folders_data_ajax","get_color_tags","active_color","deleteFolders","term_ids","sortFolders","Cookies","computed","_filter_folder","filtered_folders","child_folder","addChild","total_posts_count","total","is_reached_limit","watch","apply","arguments","_m","composing","create_folder_popup","is_pro","create_folder_error","color_tags","color_tag","active_color_tag","pro_notice","rename_folder_popup","rename_folder_name","rename_folder_error","delete_folder_popup","move_to_folder_popup"],"sourceRoot":""}